---
- hosts: localhost
  vars_files:
    - vars.yml
  tasks:
    - name: Retrieve basic inventory of all devices. Test
      dellemc.openmanage.ome_device_info:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: no
      register: device_info_result
    

    - name: Device count
      debug:
        msg: "Number of devices: {{ device_info_result.device_info.value | length}}"

    - name: get all service tags
      set_fact:
        service_tags: "{{ service_tags + [item.DeviceServiceTag] }}"
      loop: "{{ device_info_result.device_info.value }}"
      no_log: true

    - name: List service tags of devices  
      debug:
        msg: "{{ service_tags }} "

    - name: Save device_info to a file
      copy: 
        content: "{{ device_info_result | to_nice_json }}"
        dest: "./output-json/device_info_result.json"
    

    - name: Retrieve subsystem health of specified devices identified by service tags.
      dellemc.openmanage.ome_device_info:
        hostname: "{{ hostname }}"
        username: "{{ username }}"
        password: "{{ password }}"
        validate_certs: no
        fact_subset: "subsystem_health"
        system_query_options:
          device_service_tag: "{{service_tags}}"
      register: health_info_result
    
    - name: Save device health info to a file
      copy: 
        content: "{{ health_info_result | to_nice_json }}"
        dest: "./output-json/health_info_result.json"

    - name: Gather information for devices for issues 
      set_fact:
        inventory_issues: >
          {{
          inventory_issues  + 
            [{
            'service_tag':item,
            'fault_summary':health_info_result['device_info']['device_service_tag'][service_tags[index]]['value'] | json_query('[?FaultSummaryList].FaultSummaryList[]'),
            'fault_list':health_info_result['device_info']['device_service_tag'][service_tags[index]]['value'] | json_query('[?FaultList].FaultList[]')  
            }] 
          }} 
      loop: "{{ service_tags }}"
      when: " (health_info_result['device_info']['device_service_tag'][service_tags[index]]['value'] | json_query('[?FaultList].FaultList[]') | length) > 0"
      loop_control:
        index_var: index
      no_log: true

    - name: Print fault summaries
      debug:
        msg: "Fault Summary {{item.fault_list}}"
      loop: "{{inventory_issues}}"
      loop_control:
        label: "{{item.service_tag}}"

    - name: Gather fault details
      include_tasks: device_issues.yml
      vars:
        device_item: "{{ item }}"
        device_index: "{{ index }}"
        #all_faults: all_faults
      loop: "{{ inventory_issues }}"
      loop_control:
        index_var: index
      no_log: true

    - name: Print fault details
      debug:
        msg: "Fault details: {{item.Faults}}"
      loop: "{{fault_details}}"
      loop_control:
        label: "{{item.service_tag}}"

    - name: Print recommendations
      debug:
        msg: "Recommended actions: {{item.Recommendations}}"
      loop: "{{fault_details}}"
      loop_control:
        label: "{{item.service_tag}}"

    